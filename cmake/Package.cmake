set(CPACK_PACKAGE_VERSION "${LSR_VERSION_MAJOR}.${LSR_VERSION_MINOR}.${LSR_VERSION_PATCH}")
set(CPACK_PACKAGE_VERSION_MAJOR "${LSR_VERSION_MAJOR}")
set(CPACK_PACKAGE_VERSION_MINOR "${LSR_VERSION_MINOR}")
set(CPACK_PACKAGE_VERSION_PATCH "${LSR_VERSION_PATCH}")

set(CPACK_PACKAGE_VENDOR "Luxoft")
set(CPACK_PACKAGE_NAME "${CPACK_PACKAGE_VENDOR} ${PROJECT_NAME}")
set(CPACK_PACKAGE_DESCRIPTION_SUMMARY "${CPACK_PACKAGE_VENDOR} ${PROJECT_NAME} installation pack")

set(CPACK_PACKAGE_FILE_NAME "${PROJECT_NAME}-${LSR_VERSION_MAJOR}.${LSR_VERSION_MINOR}.${LSR_VERSION_PATCH}")

if(DEVELOPMENT_BUILD)
    if(DEFINED GIT_REVISION_SHORT)
        set(CPACK_PACKAGE_FILE_NAME "${CPACK_PACKAGE_FILE_NAME}-${GIT_REVISION_SHORT}")
    else()
        set(CPACK_PACKAGE_FILE_NAME "${CPACK_PACKAGE_FILE_NAME}-UNKNOWNHASH")
    endif()
endif()

if(NOT DEFINED CPACK_SYSTEM_NAME)
    if(NOT DEFINED CMAKE_SYSTEM_NAME)
        set(CPACK_SYSTEM_NAME "UNKNOWNSYS")
    elseif("${CMAKE_SYSTEM_NAME}" MATCHES "Windows")
        if(CMAKE_CL_64)
            set(CPACK_SYSTEM_NAME "win64")
        else()
            set(CPACK_SYSTEM_NAME "win32")
        endif()
    elseif("${CMAKE_SYSTEM_NAME}" STREQUAL "Linux")
        set(CPACK_SYSTEM_NAME "linux")
    else()
        set(CPACK_SYSTEM_NAME ${CMAKE_SYSTEM_NAME})
    endif()
endif()

set(CPACK_PACKAGE_FILE_NAME "${CPACK_PACKAGE_FILE_NAME}-${CPACK_SYSTEM_NAME}")

if(CMAKE_BUILD_TYPE STREQUAL "Debug")
    set(CPACK_PACKAGE_FILE_NAME "${CPACK_PACKAGE_FILE_NAME}-Dbg")
elseif(CMAKE_BUILD_TYPE STREQUAL "RelWithDebInfo")
    set(CPACK_PACKAGE_FILE_NAME "${CPACK_PACKAGE_FILE_NAME}-RelWDbg")
endif()

if(UNIT_TESTS)
    set(CPACK_PACKAGE_FILE_NAME "${CPACK_PACKAGE_FILE_NAME}-UnitTest")
endif()

set(CPACK_PACKAGE_FILE_NAME "${CPACK_PACKAGE_FILE_NAME}" CACHE INTERNAL "" FORCE)
